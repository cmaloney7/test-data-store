swagger: 2.0
info:
  description: my description of the store
  version: 1.0.0
  title: Test Data Store
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: localhost:12701
tags:
  - name: booking
    description: Modification to booking data
  - name: bookings
    description: Get booking data
  - name: customer
    description: Modification to booking data
  - name: customers
    description: Get customer data
schemes:
  - https
  - http
paths:
  /bookings:
    get:
      tags:
      - "bookings"
      summary: "Returns bookings"
      description: "Returns bookings based on search critera"
      operationId: "getBookings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: body
          name: body
          description: Booking data to be added to the store
          required: true
          schema:
            $ref: '#/definitions/BookingSearch'
      responses:
        200:
          description: "OK"
  /booking:
    post:
      tags:
        - booking
      summary: Add a booking
      description: Adds a new booking record to the database
      operationId: addBooking
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Booking data to be added to the store
          required: true
          schema:
            $ref: '#/definitions/Booking'
      responses:
        '200':
          description: OK
  /booking/{id}:
    put:
      tags:
        - booking
      summary: Modify a booking
      description: >-
        Modify an existing booking.  Requires the  '_id' of the exiting record.
        Example: '_id': '5d5a0509a042a3001caa3b62'
      operationId: updateBooking
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of booking to modify
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Booking data to be added to the store
          required: true
          schema:
            $ref: '#/definitions/Booking'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - booking
      summary: Delete a booking
      description: "Delete an existing booking.  Requires the  '_id' of the exiting record."
      operationId: deleteBooking
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of booking to delete from database
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK

definitions:
  Booking:
    type: object
    required:
      - bookingNumber
      - lastName
    properties:
      reservedBy:
        type: string
        description: >-
          (optional) - identifier used to mark test data as private. Records
          containing a value in 'reservedBy' can only be accessed in the GET if
          specified in the search criteria body
      bookingNumber:
        type: string
        example: CPMGDR
      lastName:
        type: string
      polarRegion:
        type: string
        default: HAQ
        enum:
          - HAQ
          - TSTHARES
          - SBQ
          - TSTSBRES
          - HA
          - SB
      brand:
        type: string
        enum:
          - HAL
          - SBN
      env:
        type: string
        description: TEST or PROD
        enum:
          - TEST
          - PROD
      departureDate:
        type: string
        example: 01/09/2020
        description: mm/dd/yyyy
      email:
        type: string
      password:
        type: string
      marinerId:
        type: string
      occupancy:
        description: number of guests
        type: integer
      loyalty:
        description: loyalty status of a guest
        type: string
        enum:
          - club
          - silver
          - gold
          - platinum
          - diamond
          - diamond elite
      currency:
        type: string
        enum:
          - USD
          - AUD
          - CAD
          - EUR
  BookingSearch:
    type: object
    required:
      - bookingNumber
      - lastName
    properties:
      reservedBy:
        type: string
        description: >-
          (optional) - identifier used to mark test data as private. Records
          containing a value in 'reservedBy' can only be accessed in the GET if
          specified in the search criteria body
      polarRegion:
        type: string
        enum:
          - HAQ
          - TSTHARES
          - SBQ
          - TSTSBRES
          - HA
          - SB
      brand:
        type: string
        enum:
          - HAL
          - SBN
      env:
        type: string
        description: TEST or PROD
        enum:
          - TEST
          - PROD